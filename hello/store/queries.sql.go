// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: queries.sql

package store

import (
	"context"
)

const getMeetingCount = `-- name: GetMeetingCount :one
SELECT count
FROM people
WHERE name = ?
`

func (q *Queries) GetMeetingCount(ctx context.Context, name string) (int32, error) {
	row := q.db.QueryRowContext(ctx, getMeetingCount, name)
	var count int32
	err := row.Scan(&count)
	return count, err
}

const incrementMeetingCount = `-- name: IncrementMeetingCount :exec
INSERT INTO people (name, count)
VALUES (?, 1)
ON DUPLICATE KEY UPDATE
count = count + 1
`

func (q *Queries) IncrementMeetingCount(ctx context.Context, name string) error {
	_, err := q.db.ExecContext(ctx, incrementMeetingCount, name)
	return err
}
